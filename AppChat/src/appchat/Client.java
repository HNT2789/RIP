/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package appchat;

import com.sun.xml.internal.ws.api.ha.StickyFeature;
import java.awt.Color;
import java.awt.Font;
import java.awt.image.BufferedImage;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author Hieu
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
    String name;
    Socket mySocket;
    DataOutputStream os;
    static DataInputStream is;
    static String responseStr; // du lieu nhan ve
//    JLabel labeltemp;
//    JTextArea texttmp;

    public Client() {
        try {
            initComponents();
            mySocket = new Socket("127.0.0.1", 5555);
            JOptionPane.showMessageDialog(null, "da ket noi vs server(chatroom) <3");
            os = new DataOutputStream(mySocket.getOutputStream());
            ReadClient dis = new ReadClient(mySocket);
            dis.();
            os.writeUTF(name);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi: không thấy server nha!!!");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jmess = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jmess, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jmess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//    public void the_tin_nhan_tu_tao(int pos_x, int pos_y, int rong, int dai) throws IOException
//    {
////        FontMessMe ft = new FontMessMe();
////        vieww.add(ft.jTextArea1);
//        
//        texttmp = new JTextArea();
//        texttmp.setBackground(null);
//        texttmp.setColumns(20);
//        texttmp.setFont(new java.awt.Font("Monospaced", 1, 24));
//        texttmp.setForeground(Color.RED);
//        texttmp.setLineWrap(true);
//        texttmp.setRows(1);
//        texttmp.setWrapStyleWord(true);
//        texttmp.setBounds(pos_x, pos_y, rong, dai);
//        texttmp.setText("áuiduhaoshdoasidoasdojiasodjaosdijoasjdoasjdosajdjoasjdo");
//        texttmp.setEditable(false);
//        vieww.add(texttmp);
//        
//        
//        labeltemp = new JLabel();
//        labeltemp.setBounds(pos_x, pos_y, rong, dai);
//        labeltemp.setBackground(null);
//        labeltemp.setText("jdishofsdofjds");
//        BufferedImage iconmess  = ImageIO.read(new File("C:/Users/Hieu/Pictures/mess.jpg"));
//        ImageIcon mes = new ImageIcon(iconmess.getScaledInstance(339, 37, iconmess.SCALE_SMOOTH));
//        labeltemp.setIcon(mes);
//        vieww.add(labeltemp);
////        
//        
//    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
//            vieww.setLayout(null);
//            the_tin_nhan_tu_tao(0, 0, 339, 37);
//            repaint();
//            validate();
            os.writeUTF(jmess.getText());
            jTextArea1.append(jmess.getText() + "\n");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi: tin nhắn ko chuyển đi được, bạn hãy thử lại!!!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jmess;
    // End of variables declaration//GEN-END:variables
}

class ReadClient extends Client implements Runnable {

    Socket client;

    public ReadClient(Socket cli) {
        this.client = cli;
    }

    @Override
    public void run() {
        DataInputStream is = null;
        try {
            is = new DataInputStream(client.getInputStream());
            while (true) {
                String mes = is.readUTF();
                super.jTextArea1.append(mes + "\n");
            }
        } catch (Exception e) {
            try {
                is.close();
                client.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Loi khong dong ket noi dc");
            }
        }
    }
}
